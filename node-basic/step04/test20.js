/* 주제: 함수 - 함수 호출 동기 방식과 비동기 방식 II
동기 방식 호출
- 일반적으로 대부분의 함수가 동기 방식의 호출이다.
- 즉 함수 실행이 완료될 때 까지 블로킹이 걸려 있다.
  다음 명령을 실행하지 않는다.
- 함수에서 무한 루프에 빠지면 더이상 실행할 수 없는 상태가 될 수 있다.
- 함수에서 시간이 오래 걸리면 다음 실행이 오랫동안 지연되는 문제가 발생한다.

비동기 방식 호출
- 서버와 통신이나 파일 입.출력 부분에서 사용된다.
- 함수 실행(호출)을 시킨 후, 함수가 작업을 끝날 때까지 기다리지 않고
  즉시 다음 명령문을 실행하는 방식이다.
*/
"use strict"

var prompt = require('prompt');

prompt.start();

// 비동기 호출 방식의 예
// get() 함수는 명령창에서 입력 받는 작업을 별도로 시작한다.
// 작업이 완료될 때까지 기다리지 않고 즉시 리턴한다.
// 그래서 비동기 호출인 것이다.
prompt.get(['a', 'b'], function(err, result) {
  console.log("입력 값 출력 ------------------------");
  console.log(result.a, result.b);
});
console.log("우헤헤헤헤헤ㅔㅔㅔ......")

//
